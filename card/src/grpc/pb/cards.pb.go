// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: cards.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardholderName string `protobuf:"bytes,1,opt,name=cardholder_name,json=cardholderName,proto3" json:"cardholder_name,omitempty"`
	IsCredit       bool   `protobuf:"varint,2,opt,name=is_credit,json=isCredit,proto3" json:"is_credit,omitempty"`
	IsDebit        bool   `protobuf:"varint,3,opt,name=is_debit,json=isDebit,proto3" json:"is_debit,omitempty"`
}

func (x *CreateCardRequest) Reset() {
	*x = CreateCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardRequest) ProtoMessage() {}

func (x *CreateCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardRequest.ProtoReflect.Descriptor instead.
func (*CreateCardRequest) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCardRequest) GetCardholderName() string {
	if x != nil {
		return x.CardholderName
	}
	return ""
}

func (x *CreateCardRequest) GetIsCredit() bool {
	if x != nil {
		return x.IsCredit
	}
	return false
}

func (x *CreateCardRequest) GetIsDebit() bool {
	if x != nil {
		return x.IsDebit
	}
	return false
}

type FullCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CardholderName  string `protobuf:"bytes,2,opt,name=cardholder_name,json=cardholderName,proto3" json:"cardholder_name,omitempty"`
	Number          string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Cvv             string `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	Token           string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	MaskedNumber    string `protobuf:"bytes,6,opt,name=masked_number,json=maskedNumber,proto3" json:"masked_number,omitempty"`
	ExpirationYear  int64  `protobuf:"varint,7,opt,name=expiration_year,json=expirationYear,proto3" json:"expiration_year,omitempty"`
	ExpirationMonth int64  `protobuf:"varint,8,opt,name=expiration_month,json=expirationMonth,proto3" json:"expiration_month,omitempty"`
	Active          bool   `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	IsCredit        bool   `protobuf:"varint,10,opt,name=is_credit,json=isCredit,proto3" json:"is_credit,omitempty"`
	IsDebit         bool   `protobuf:"varint,11,opt,name=is_debit,json=isDebit,proto3" json:"is_debit,omitempty"`
}

func (x *FullCard) Reset() {
	*x = FullCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullCard) ProtoMessage() {}

func (x *FullCard) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullCard.ProtoReflect.Descriptor instead.
func (*FullCard) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{1}
}

func (x *FullCard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullCard) GetCardholderName() string {
	if x != nil {
		return x.CardholderName
	}
	return ""
}

func (x *FullCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *FullCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *FullCard) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FullCard) GetMaskedNumber() string {
	if x != nil {
		return x.MaskedNumber
	}
	return ""
}

func (x *FullCard) GetExpirationYear() int64 {
	if x != nil {
		return x.ExpirationYear
	}
	return 0
}

func (x *FullCard) GetExpirationMonth() int64 {
	if x != nil {
		return x.ExpirationMonth
	}
	return 0
}

func (x *FullCard) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FullCard) GetIsCredit() bool {
	if x != nil {
		return x.IsCredit
	}
	return false
}

func (x *FullCard) GetIsDebit() bool {
	if x != nil {
		return x.IsDebit
	}
	return false
}

type GetCardByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetCardByTokenRequest) Reset() {
	*x = GetCardByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCardByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardByTokenRequest) ProtoMessage() {}

func (x *GetCardByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetCardByTokenRequest) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{2}
}

func (x *GetCardByTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CardholderName  string `protobuf:"bytes,2,opt,name=cardholder_name,json=cardholderName,proto3" json:"cardholder_name,omitempty"`
	Token           string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	MaskedNumber    string `protobuf:"bytes,4,opt,name=masked_number,json=maskedNumber,proto3" json:"masked_number,omitempty"`
	ExpirationYear  int64  `protobuf:"varint,5,opt,name=expiration_year,json=expirationYear,proto3" json:"expiration_year,omitempty"`
	ExpirationMonth int64  `protobuf:"varint,6,opt,name=expiration_month,json=expirationMonth,proto3" json:"expiration_month,omitempty"`
	Active          bool   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	IsCredit        bool   `protobuf:"varint,8,opt,name=is_credit,json=isCredit,proto3" json:"is_credit,omitempty"`
	IsDebit         bool   `protobuf:"varint,9,opt,name=is_debit,json=isDebit,proto3" json:"is_debit,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cards_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_cards_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_cards_proto_rawDescGZIP(), []int{3}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetCardholderName() string {
	if x != nil {
		return x.CardholderName
	}
	return ""
}

func (x *Card) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Card) GetMaskedNumber() string {
	if x != nil {
		return x.MaskedNumber
	}
	return ""
}

func (x *Card) GetExpirationYear() int64 {
	if x != nil {
		return x.ExpirationYear
	}
	return 0
}

func (x *Card) GetExpirationMonth() int64 {
	if x != nil {
		return x.ExpirationMonth
	}
	return 0
}

func (x *Card) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Card) GetIsCredit() bool {
	if x != nil {
		return x.IsCredit
	}
	return false
}

func (x *Card) GetIsDebit() bool {
	if x != nil {
		return x.IsDebit
	}
	return false
}

var File_cards_proto protoreflect.FileDescriptor

var file_cards_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x72,
	0x64, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x65, 0x62, 0x69, 0x74, 0x22, 0xcc, 0x02, 0x0a, 0x08, 0x46,
	0x75, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x44, 0x65, 0x62, 0x69, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x02, 0x0a, 0x04, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x64,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x44, 0x65, 0x62, 0x69, 0x74, 0x32, 0x83, 0x01, 0x0a, 0x05, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x22, 0x00, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6d,
	0x76, 0x69, 0x6e, 0x69, 0x63, 0x69, 0x75, 0x73, 0x73, 0x2f, 0x74, 0x63, 0x63, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cards_proto_rawDescOnce sync.Once
	file_cards_proto_rawDescData = file_cards_proto_rawDesc
)

func file_cards_proto_rawDescGZIP() []byte {
	file_cards_proto_rawDescOnce.Do(func() {
		file_cards_proto_rawDescData = protoimpl.X.CompressGZIP(file_cards_proto_rawDescData)
	})
	return file_cards_proto_rawDescData
}

var file_cards_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cards_proto_goTypes = []interface{}{
	(*CreateCardRequest)(nil),     // 0: cards.CreateCardRequest
	(*FullCard)(nil),              // 1: cards.FullCard
	(*GetCardByTokenRequest)(nil), // 2: cards.GetCardByTokenRequest
	(*Card)(nil),                  // 3: cards.Card
}
var file_cards_proto_depIdxs = []int32{
	0, // 0: cards.Cards.GenerateCard:input_type -> cards.CreateCardRequest
	2, // 1: cards.Cards.GetCardByToken:input_type -> cards.GetCardByTokenRequest
	1, // 2: cards.Cards.GenerateCard:output_type -> cards.FullCard
	3, // 3: cards.Cards.GetCardByToken:output_type -> cards.Card
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cards_proto_init() }
func file_cards_proto_init() {
	if File_cards_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cards_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCardByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cards_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cards_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cards_proto_goTypes,
		DependencyIndexes: file_cards_proto_depIdxs,
		MessageInfos:      file_cards_proto_msgTypes,
	}.Build()
	File_cards_proto = out.File
	file_cards_proto_rawDesc = nil
	file_cards_proto_goTypes = nil
	file_cards_proto_depIdxs = nil
}
